Bootstrap: docker
From: neurodebian:nd20.04-non-free
Stage: spython-base

%post
    # Set timezone to Etc/UTC for tzdata. See https://github.com/pyg-team/pytorch_geometric/pull/4376
    TZ=Etc/UTC && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone

    SHELL=/bin/bash
    export SHELL


    DEBIAN_FRONTEND=noninteractive

    apt update && \
    apt-get update && apt-get upgrade -y

    apt install -y parallel python3 python3-pip tree curl unzip git jq python libgl-dev python-numpy

    pip3 install numpy==1.23.0 nibabel==4.0.0 pandas==1.0.1 matplotlib pyyaml==5.4.1 pydicom==2.3.1 natsort pydeface && \
    pip3 install quickshear pypet2bids

    apt-get install -y build-essential pkg-config cmake git pigz rename zstd libopenjp2-7 libgdcm-tools wget libopenblas-dev && \
    apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y

    #this is the most tedious that's why it's one of the first layers installed
    #install fsl, and get rid of src
    # RUN wget https://fsl.fmrib.ox.ac.uk/fsldownloads/fslinstaller.py && \
    #       python fslinstaller.py -d /usr/local/fsl -V 6.0.6 && rm -rf /usr/local/fsl/src

    mkdir -p /usr/local/fsl && \
    git clone https://github.com/dlevitas/FSL_binaries /usr/local/fsl && \
    rm -rf /usr/local/fsl/README.md

    FSLDIR=/usr/local/fsl
    PATH=$PATH:$FSLDIR/bin
    # ENV LD_LIBRARY_PATH=$FSLDIR/lib
    # RUN . $FSLDIR/etc/fslconf/fsl.sh

    FSLOUTPUTTYPE=NIFTI_GZ

    # #make sure fslpython is properly installed
    # RUN which imcp

    # # certs have expired for nodesource use the hack below to get around that for install
    # #### HACK Warning ####
    # # unfortuanetly this seems to work the most reliably
    # # see https://github.com/nodesource/distributions/issues/1266#issuecomment-938408547 and
    # RUN echo "insecure" > $HOME/.curlrc \
    #     && echo "Acquire::https::Verify-Peer false;" >> /etc/apt/apt.conf.d/80ssl-exceptions \ 
    #     && echo "Acquire::https::Verify-Host false;" >> /etc/apt/apt.conf.d/80ssl-exceptions \
    #     && curl -fsSL https://deb.nodesource.com/setup_14.x | bash - \
    #     && apt install -y nodejs \ 
    #     && rm -f $HOME/.curlrc \
    #     && rm -f /etc/apt/apt.conf.d/80ssl-exceptions \
    #     && npm --version

    apt-get update \
    && apt-get install -y ca-certificates curl gnupg \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg

    NODE_MAJOR=16
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list

    apt-get update \
    && apt-get install nodejs -y

    # RUN wget https://github.com/rordenlab/dcm2niix/releases/download/v1.0.20230411/dcm2niix_lnx.zip -O /tmp/dcm2niix_lnx.zip && \
    #     unzip /tmp/dcm2niix_lnx.zip && \
    #     mv dcm2niix /usr/local/bin

    git clone --branch development https://github.com/rordenlab/dcm2niix.git \
    && cd dcm2niix/console \
    && make \
    && mv dcm2niix /usr/local/bin

    # Get bids-specification from github
    cd && git clone https://github.com/bids-standard/bids-specification

    #install ROBEX
    curl -O -L "https://www.nitrc.org/frs/download.php/5994/ROBEXv12.linux64.tar.gz//?i_agree=1&download_now=1" 
    tar -xzf \?i_agree\=1\&download_now\=1
    PATH=/ROBEX:$PATH

    NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
    PATH=$NVM_DIR/v$NODE_VERSION/bin:$PATH

    #install bids-validator
    npm install -g bids-validator@1.11.0
    git clone https://github.com/bids-standard/bids-validator

    # install source code from local
    mkdir -p /app/handler
    cd /app/handler
    npm -g install pm2

%environment
    export MONGO_CONNECTION_STRING=mongodb://mongodb:27017/ezbids
    export DEBIAN_FRONTEND=noninteractive
    export FSLDIR=/usr/local/fsl
    export PATH=$PATH:$FSLDIR/bin
    export FSLOUTPUTTYPE=NIFTI_GZ
    export PATH=/ROBEX:$PATH
    export NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
    export PATH=$NVM_DIR/v$NODE_VERSION/bin:$PATH
    export MONGO_CONNECTION_STRING=mongodb://mongodb:27017/ezbids

%runscript
    cd /app/handler
    exec /bin/bash "$@"
    pm2 start handler.js --attach --watch --ignore-watch "ui **/node_modules"

%startscript
    cd /app/handler
    exec /bin/bash "$@"
    pm2 start handler.js --attach --watch --ignore-watch "ui **/node_modules"